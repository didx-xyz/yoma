environments:
  local:
    values:
      - namespace: yoma-dev
  dev:
    values:
      - namespace: yoma-v3-dev
      - arch: amd64
      - lifecycle: spot
      - tag: {{ env "TAG" | default "master" }}
      - ddInjectEnabled: false
      - gitref: master
  stage:
    values:
      - namespace: yoma-v3-stage
      - arch: amd64
      - lifecycle: on-demand
      - tag: {{ env "TAG" | default "master" }}
      - ddInjectEnabled: false
---
repositories:
{{ if eq .Environment.Name "local" }}
  - name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx
{{ end }}
  - name: simcube
    url: https://simcubeltd.github.io/simcube-helm-charts/
---
releases:
{{ if eq .Environment.Name "local" }}
  - name: ingress-nginx
    namespace: "ingress-nginx"
    chart: ingress-nginx/ingress-nginx
    version: "4.8.3"
{{ end }}
  - name: keycloak
    labels:
      app: keycloak
    namespace: {{ .Values.namespace }}
    chart: ./helm/keycloak
    version: "0.3.2"
    values:
      - ./helm/keycloak/conf/{{ .Environment.Name }}/values.yaml
    secrets:
      - ./helm/keycloak/conf/{{ .Environment.Name }}/secrets.yaml
  - name: postgresql-keycloak
    labels:
      app: postgresql-keycloak
    namespace: {{ .Values.namespace }}
    chart: oci://registry-1.docker.io/bitnamicharts/postgresql
    version: "13.4.3"
    set:
      - name: fullnameOverride
        value: postgresql-keycloak
      - name: auth.username
        value: keycloak
      - name: auth.database
        value: keycloak
    secrets:
      - ./helm/postgresql-keycloak/conf/{{ .Environment.Name }}/secrets.yaml

  - name: postgresql
    labels:
      app: postgresql
    namespace: {{ .Values.namespace }}
    chart: oci://registry-1.docker.io/bitnamicharts/postgresql
    version: "13.4.3"
    set:
      - name: fullnameOverride
        value: postgres-yoma
      - name: auth.username
        value: yoma
      - name: auth.database
        value: yoma-dev
      # - name: primary.extendedConfiguration
      #   value: |
      #     log_statement = 'all'
      #     log_min_duration_statement = 0
    secrets:
      - ./helm/postgresql-yoma/conf/{{ .Environment.Name }}/secrets.yaml

  - name: yoma-api
    labels:
      app: yoma-api
    namespace: {{ .Values.namespace }}
    chart: ./helm/yoma-api
    version: "0.1.0"
    set:
      - name: image.tag
        value: {{ .Values.tag }}
    values:
      - ./helm/yoma-api/conf/base/values.yaml
      - ./helm/yoma-api/conf/{{ .Environment.Name }}/values.yaml
      - nodeSelector:
          kubernetes.io/arch: {{ .Values.arch }}
          node.kubernetes.io/lifecycle: {{ .Values.lifecycle }}
      - postInstallHook:
          initContainers:
            - name: download-sql
              image: docker.io/busybox:stable
              imagePullPolicy: IfNotPresent
              command:
                - sh
              args:
                - -c
                - |-
                  cd /init
                  wget -O - \
                    --header="Authorization: token ${GITHUB_PAT}"\
                    --header="Accept:application/vnd.github.v3.raw" \
                    https://api.github.com/repos/didx-xyz/yoma/tarball/${GIT_REF} | tar xz
                  cp -v ./didx-xyz-yoma-*/src/api/cicd/scripts/postgressql-init/* /init/
                  chmod +x /init/post.sh
                  rm -rvf ./didx-xyz-yoma-*
              env:
                - name: GITHUB_PAT
                  valueFrom:
                    secretKeyRef:
                      name: keycloak-github-pat
                      key: github-pat
                - name: GIT_REF
                  value: {{ .Values.gitref }}
              volumeMounts:
                - name: init
                  mountPath: /init
    secrets:
      - ./helm/yoma-api/conf/base/secrets.yaml
      - ./helm/yoma-api/conf/{{ .Environment.Name }}/secrets.yaml

  - name: yoma-web
    labels:
      app: yoma-web
    namespace: {{ .Values.namespace }}
    chart: ./helm/yoma-web
    version: "0.1.0"
    set:
      - name: image.tag
        value: {{ .Values.tag }}
    values:
      - ./helm/yoma-web/conf/base/values.yaml
      - ./helm/yoma-web/conf/{{ .Environment.Name }}/values.yaml
      - nodeSelector:
          kubernetes.io/arch: {{ .Values.arch }}
          node.kubernetes.io/lifecycle: {{ .Values.lifecycle }}
    secrets:
      - ./helm/yoma-web/conf/base/secrets.yaml
      - ./helm/yoma-web/conf/{{ .Environment.Name }}/secrets.yaml
---
helmDefaults:
  timeout: 180
  wait: true
  atomic: true
  cleanupOnFail: true
  createNamespace: false
