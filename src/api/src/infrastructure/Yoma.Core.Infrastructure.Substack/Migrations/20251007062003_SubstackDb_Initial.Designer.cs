// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Yoma.Core.Infrastructure.Substack.Context;

#nullable disable

namespace Yoma.Core.Infrastructure.Substack.Migrations
{
    [DbContext(typeof(SubstackDbContext))]
    [Migration("20251007062003_SubstackDb_Initial")]
    partial class SubstackDb_Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Yoma.Core.Infrastructure.Substack.Entities.FeedSyncTracking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ETag")
                        .HasColumnType("varchar(512)");

                    b.Property<DateTimeOffset?>("FeedLastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FeedType")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FeedType")
                        .IsUnique();

                    b.ToTable("FeedSyncTracking", "Substack");
                });

            modelBuilder.Entity("Yoma.Core.Infrastructure.Substack.Entities.NewsArticle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("FeedType")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("PublishedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ThumbnailURL")
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(512)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("varchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .HasAnnotation("Npgsql:TsVectorConfig", "english");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Description"), "GIN");

                    b.HasIndex("FeedType", "ExternalId")
                        .IsUnique();

                    b.HasIndex("Title", "PublishedDate", "DateCreated", "DateModified");

                    b.ToTable("NewsArticle", "Substack");
                });
#pragma warning restore 612, 618
        }
    }
}
