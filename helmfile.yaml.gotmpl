environments:
  local:
    values:
      - namespace: yoma-dev
  dev:
    values:
      - namespace: yoma-v3-dev
        tag: {{ env "TAG" | default "master" }}
        ddInjectEnabled: false
        ddProfilingEnabled: false
        postgresEnabled: true
        valkeyEnabled: true
  stage:
    values:
      - namespace: yoma-v3-stage
        tag: {{ env "TAG" | default "master" }}
        ddInjectEnabled: true
        ddProfilingEnabled: false
        postgresEnabled: false
        valkeyEnabled: false
  prod:
    values:
      - namespace: yoma-v3-prod
        tag: {{ env "TAG" | default "master" }}
        ddInjectEnabled: true
        ddProfilingEnabled: false
        postgresEnabled: false
        valkeyEnabled: false
---
repositories:
{{ if eq .Environment.Name "local" }}
  - name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx
{{ end }}
  - name: codecentric
    url: https://codecentric.github.io/helm-charts
  - name: didx-xyz-config-cli
    url: git+https://github.com/didx-xyz/keycloak-config-cli@contrib/charts?ref=init-containers&sparse=0
  - name: simcube
    url: https://simcubeltd.github.io/simcube-helm-charts/
---
releases:
{{ if eq .Environment.Name "local" }}
  - name: ingress-nginx
    namespace: ingress-nginx
    # https://github.com/kubernetes/ingress-nginx/tree/main/charts/ingress-nginx
    chart: ingress-nginx/ingress-nginx
    version: 4.12.1
{{ end }}
  - name: keycloak
    labels:
      app: keycloak
    namespace: {{ .Values.namespace }}
    chart: ./helm/keycloak
    version: 0.3.2
    values:
      - ./helm/keycloak/conf/{{ .Environment.Name }}/values.yaml
      - keycloak:
          statefulsetLabels:
            tags.datadoghq.com/env: v3-{{ .Environment.Name }}
          podLabels:
            admission.datadoghq.com/enabled: {{ quote .Values.ddInjectEnabled }}
            tags.datadoghq.com/env: v3-{{ .Environment.Name }}
    secrets:
      - ./helm/keycloak/conf/{{ .Environment.Name }}/secrets.yaml
  - name: postgresql-keycloak
    labels:
      app: postgresql-keycloak
    namespace: {{ .Values.namespace }}
    # https://github.com/didx-xyz/bitnami-charts/tree/main/bitnami/postgresql
    chart: oci://ghcr.io/didx-xyz/bitnami-oss-charts/postgresql
    version: 16.6.3
    installed: {{ .Values.postgresEnabled }}
    values:
      - global:
          security:
            # Required to override image repositories (`docker.io/bitnami` -> `ghcr.io/didx-xyz/bitnami-oss`)
            # https://github.com/bitnami/charts/issues/35164
            # https://github.com/bitnami/containers/issues/84600
            allowInsecureImages: true
          imageRegistry: ghcr.io
        fullnameOverride: postgres-keycloak
        image:
          repository: didx-xyz/bitnami-oss/postgresql
        auth:
          username: keycloak
          database: keycloak
        primary:
          resourcesPreset: medium
          persistentVolumeClaimRetentionPolicy:
            enabled: true
            whenDeleted: Delete
        volumePermissions:
          image:
            repository: didx-xyz/bitnami-oss/os-shell
        metrics:
          image:
            repository: didx-xyz/bitnami-oss/postgres-exporter
    secrets:
      - ./helm/postgresql-keycloak/conf/{{ .Environment.Name }}/secrets.yaml

  - name: postgresql
    labels:
      app: postgresql
    namespace: {{ .Values.namespace }}
    # https://github.com/didx-xyz/bitnami-charts/tree/main/bitnami/postgresql
    chart: oci://ghcr.io/didx-xyz/bitnami-oss-charts/postgresql
    version: 16.6.3
    installed: {{ .Values.postgresEnabled }}
    values:
      - global:
          security:
            # Required to override image repositories (`docker.io/bitnami` -> `ghcr.io/didx-xyz/bitnami-oss`)
            # https://github.com/bitnami/charts/issues/35164
            # https://github.com/bitnami/containers/issues/84600
            allowInsecureImages: true
          imageRegistry: ghcr.io
        fullnameOverride: postgres-yoma
        image:
          repository: didx-xyz/bitnami-oss/postgresql
        auth:
          username: yoma
          database: yoma-dev
        primary:
          resourcesPreset: medium
          persistentVolumeClaimRetentionPolicy:
            enabled: true
            whenDeleted: Delete
        volumePermissions:
          image:
            repository: didx-xyz/bitnami-oss/os-shell
        metrics:
          image:
            repository: didx-xyz/bitnami-oss/postgres-exporter
    secrets:
      - ./helm/postgresql-yoma/conf/{{ .Environment.Name }}/secrets.yaml

  - name: valkey
    labels:
      app: valkey
    namespace: {{ .Values.namespace }}
    # https://github.com/didx-xyz/bitnami-charts/tree/main/bitnami/valkey
    chart: oci://ghcr.io/didx-xyz/bitnami-oss-charts/valkey
    version: 3.0.1
    installed: {{ .Values.valkeyEnabled }}
    values:
      - global:
          security:
            # Required to override image repositories (`docker.io/bitnami` -> `ghcr.io/didx-xyz/bitnami-oss`)
            # https://github.com/bitnami/charts/issues/35164
            # https://github.com/bitnami/containers/issues/84600
            allowInsecureImages: true
          imageRegistry: ghcr.io
        fullnameOverride: valkey
        image:
          repository: didx-xyz/bitnami-oss/valkey
        architecture: standalone
        auth:
          enabled: false
        primary:
          replicaCount: 1
          persistence:
            enabled: false
          persistentVolumeClaimRetentionPolicy:
            enabled: true
            whenDeleted: Delete
        replica:
          replicaCount: 0
        sentinel:
          image:
            repository: didx-xyz/bitnami-oss/valkey-sentinel
        metrics:
          image:
            repository: didx-xyz/bitnami-oss/valkey-exporter
        volumePermissions:
          image:
            repository: didx-xyz/bitnami-oss/os-shell
        kubectl:
          image:
            repository: didx-xyz/bitnami-oss/kubectl

  - name: yoma-api
    labels:
      app: yoma-api
    namespace: {{ .Values.namespace }}
    chart: ./helm/yoma-api
    version: 0.1.0
    set:
      - name: image.tag
        value: {{ .Values.tag }}
    values:
      - ./helm/yoma-api/conf/base/values.yaml
      - ./helm/yoma-api/conf/{{ .Environment.Name }}/values.yaml
      - env:
          DD_PROFILING_ENABLED: {{ .Values.ddProfilingEnabled }}
        deploymentLabels:
          tags.datadoghq.com/env: v3-{{ .Environment.Name }}
        podLabels:
          admission.datadoghq.com/enabled: {{ quote .Values.ddInjectEnabled }}
          tags.datadoghq.com/env: v3-{{ .Environment.Name }}
    secrets:
      - ./helm/yoma-api/conf/base/secrets.yaml
      - ./helm/yoma-api/conf/{{ .Environment.Name }}/secrets.yaml

  - name: yoma-web
    labels:
      app: yoma-web
    namespace: {{ .Values.namespace }}
    chart: ./helm/yoma-web
    version: 0.1.0
    set:
      - name: image.tag
        value: {{ .Values.tag }}
    values:
      - ./helm/yoma-web/conf/base/values.yaml
      - ./helm/yoma-web/conf/{{ .Environment.Name }}/values.yaml
      - env:
          DD_PROFILING_ENABLED: {{ .Values.ddProfilingEnabled }}
        deploymentLabels:
          tags.datadoghq.com/env: v3-{{ .Environment.Name }}
        podLabels:
          admission.datadoghq.com/enabled: {{ quote .Values.ddInjectEnabled }}
          tags.datadoghq.com/env: v3-{{ .Environment.Name }}
    secrets:
      - ./helm/yoma-web/conf/base/secrets.yaml
      - ./helm/yoma-web/conf/{{ .Environment.Name }}/secrets.yaml
---
helmDefaults:
  timeout: 300
  wait: true
  atomic: true
  cleanupOnFail: true
  createNamespace: false
