apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "yoma-web.fullname" . }}
  labels:
    {{- include "yoma-web.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "yoma-web.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "yoma-web.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "yoma-web.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command:
            {{- toYaml .Values.command | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args:
            {{- toYaml .Values.args | nindent 12 }}
          {{- end }}
          ports:
            - name: {{ .Values.service.portName | default "http"  }}
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- range $k, $v := .Values.service.addPorts }}
            - name: {{ $v.targetPort | default $k }}
              containerPort: {{ $v.port }}
              protocol: TCP
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.portName | default "http"  }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.portName | default "http"  }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.env }}
          env:
            {{- range $k,$v := .Values.env }}
            - name: {{ $k }}
              {{- $type := printf "%s" (typeOf $v) }}
              {{- if or (eq $type "string") (eq $type "float64") (eq $type "bool") }}
              value: {{ tpl (toString $v) $ | quote }}
              {{- else }}
              {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 10 }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if .Values.envSecret }}
          envFrom:
            - secretRef:
                name: {{ include "yoma-web.fullname" . }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
