ingress:
  internal:
    enabled: true
    rules:
      - host: "{{ .Values.keycloak.ingressDomain }}"
        paths:
          - path: /auth
  internal-admin:
    enabled: true
    rules:
      - host: auth.{{ .Values.keycloak.ingressDomain }}
  external:
    enabled: true
    rules:
      - host: "{{ .Values.keycloak.ingressDomain }}"
        paths:
          - path: /auth/realms/yoma
          - path: /auth/resources
          - path: /auth/js
      # Required for Vercel Rewrite
      - host: keycloak.{{ .Values.keycloak.ingressDomain }}
        paths:
          - path: /auth/realms/yoma
          - path: /auth/resources
          - path: /auth/js

postInstallHook:
  enabled: false

keycloak:
  replicas: 2

  ingressDomain: stage.yoma.world

  themes:
    enabled: true
    ref: master

  extraEnvFrom: |-
    - secretRef:
        name: keycloak-webhook

  database:
    existingSecret: keycloak-db
    existingSecretKey: password
    vendor: postgres

  affinity: |-
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          preference:
            matchExpressions:
              - key: node.kubernetes.io/lifecycle
                operator: In
                values:
                  - spot
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                {{- include "keycloak.selectorLabels" . | nindent 12 }}
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                    - test
            topologyKey: kubernetes.io/hostname
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                {{- include "keycloak.selectorLabels" . | nindent 12 }}
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                    - test
            topologyKey: topology.kubernetes.io/zone

config-cli:
  enabled: true
  env:
    KEYCLOAK_URL: https://stage.yoma.world/auth
    IMPORT_FILES_LOCATIONS: "/init/*.yaml"
    # KEYCLOAK_USER: xxx
    # REALM_YOMA_ADMIN_CLI_SECRET: xxx
    # SMTP_PASSWORD: SG.xxx
    CLIENT_YOMA_API_URL: https://v3api.stage.yoma.world
    CLIENT_YOMA_WEB_URL: https://stage.yoma.world
    CLIENT_ATINGI_URL: https://uatkeycloak.atingi.org
    CLIENT_ATINGI_URL_REDIRECT: https://uatkeycloak.atingi.org/realms/master/broker/yoma-prod/endpoint
    CLIENT_ATINGI_URL_POST_LOGOUT_REDIRECT: https://uatkeycloak.atingi.org/realms/master/broker/yoma-prod/endpoint
    CLIENT_GOODWALL_URL: https://dev.goodlab.io
    CLIENT_GOODWALL_URL_REDIRECT: goodwallauth://yomaredirect
    CLIENT_IIASA_URL: https://localhost:44345
    CLIENT_IIASA_URL_REDIRECT: https://localhost:44345/signin-yoma-oidc
    CLIENT_MINI_SASS_URL: https://minisass.sta.do.kartoza.com
    CLIENT_MINI_SASS_URL_REDIRECT: https://minisass.sta.do.kartoza.com/authentication/api/yoma/callback
    GOOGLE_CLIENT_ID: 1088325631106-bujeaidsr9a94fqq92qkpcnn1aa73phv.apps.googleusercontent.com
    FACEBOOK_CLIENT_ID: "895741739433688"

  init:
    enabled: true
    ref: master

  existingSecret: keycloak-admin
  existingSecretKey: password

  extraVolumes: |-
    - name: init
      emptyDir: {}

  extraVolumeMounts: |-
    - name: init
      mountPath: /init

  initContainers: |-
    {{- if .Values.init.enabled }}
    - name: download-realm
      image: docker.io/busybox:stable
      imagePullPolicy: IfNotPresent
      command:
        - sh
      args:
        - -c
        - |-
          cd /init
          wget -O - \
            --header="Accept:application/vnd.github.v3.raw" \
            https://api.github.com/repos/didx-xyz/yoma/tarball/{{ .Values.init.ref }} | tar xz
          cp -v ./didx-xyz-yoma-*/src/keycloak/exports/* /init/
          rm -rf ./didx-xyz-yoma-*
      volumeMounts:
        - name: init
          mountPath: /init
    {{- end }}
