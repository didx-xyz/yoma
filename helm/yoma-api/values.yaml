# Default values for yoma-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: local/yoma-api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  ad.datadoghq.com/yoma-api.logs: '[{ "service" : "yoma-api", "source" : "csharp"}]'
  # gcr.io/datadoghq/dd-lib-dotnet-init
  admission.datadoghq.com/dotnet-lib.version: v3.19.0
deploymentLabels:
  tags.datadoghq.com/service: yoma-api
  tags.datadoghq.com/version: "{{ .Values.image.tag | default .Chart.AppVersion }}"
podLabels:
  admission.datadoghq.com/enabled: "false" # disabled by default (for now)
  tags.datadoghq.com/service: yoma-api
  tags.datadoghq.com/version: "{{ .Values.image.tag | default .Chart.AppVersion }}"
commonLabels: {}

env:
  DD_RUNTIME_METRICS_ENABLED: true
  # https://docs.datadoghq.com/tracing/other_telemetry/connect_logs_and_traces/dotnet/?tab=serilog#automatic-injection
  DD_LOGS_INJECTION: true
  # https://docs.datadoghq.com/profiler/enabling/dotnet/?tab=linux#configuration
  DD_PROFILING_ENABLED: false # Disabled by default (for now)
  DD_PROFILING_HEAP_ENABLED: true
  DD_PROFILING_ALLOCATION_ENABLED: true

podSecurityContext:
  fsGroup: 1000

securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8000
  # portName:  core
  # targetPort: core # Defaults to http
  # addPorts:
  #   signatory:
  #     port: 7001
  #     targetPort: signatory-container-port
  #   custodian:
  #     port: 7002
  #   auditor:
  #     port: 7003
  #   essif:
  #     port: 7004

ingress:
  internal:
    enabled: false
    className: nginx-internal
    annotations:
      nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
      nginx.ingress.kubernetes.io/proxy-busy-buffers-size: 128k
      nginx.ingress.kubernetes.io/proxy-buffering: "on"
      nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
      nginx.ingress.kubernetes.io/server-snippet: large_client_header_buffers 8 128k;
      # https://docs.datadoghq.com/tracing/other_telemetry/rum/?tab=datadog&site=eu#how-rum-resources-are-linked-to-traces
      # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#enable-cors
      nginx.ingress.kubernetes.io/cors-allow-headers: traceparent, x-datadog-trace-id, x-datadog-parent-id, x-datadog-origin, x-datadog-sampling-priority
    rules:
      - host: example.com
        paths:
          - path: /
            port: 8000
  external:
    enabled: false
    className: nginx-external
    annotations:
      nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
      nginx.ingress.kubernetes.io/proxy-busy-buffers-size: 128k
      nginx.ingress.kubernetes.io/proxy-buffering: "on"
      nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
      nginx.ingress.kubernetes.io/server-snippet: large_client_header_buffers 8 128k;
      # https://docs.datadoghq.com/tracing/other_telemetry/rum/?tab=datadog&site=eu#how-rum-resources-are-linked-to-traces
      # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#enable-cors
      nginx.ingress.kubernetes.io/cors-allow-headers: traceparent, x-datadog-trace-id, x-datadog-parent-id, x-datadog-origin, x-datadog-sampling-priority
    rules:
      - host: example.com
        paths:
          - path: /
            port: 8000

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  # limits:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
  behavior:
    # https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#default-behavior
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 1
          periodSeconds: 15
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Pods
          value: 1
          periodSeconds: 15

nodeSelector: {}
tolerations: []
affinity: {}
podAffinityPreset: ""
podAntiAffinityPreset: soft
nodeAffinityPreset:
  type: soft
  key: node.kubernetes.io/lifecycle
  values:
    - spot

volumeMounts:
  - name: tmp
    mountPath: /tmp
volumes:
  - name: tmp
    emptyDir:
      sizeLimit: 10Gi
persistence: {}

initContainers: []

postInstallHook:
  enabled: false
  ref: master
  initContainers:
    - name: download-sql
      image: docker.io/busybox:stable
      imagePullPolicy: IfNotPresent
      command:
        - sh
      args:
        - -c
        - |-
          cd /init
          wget -qO - \
            --header="Accept:application/vnd.github.v3.raw" \
            https://api.github.com/repos/didx-xyz/yoma/tarball/{{ .Values.postInstallHook.ref }} | tar xz
          cp -v ./didx-xyz-yoma-*/src/api/cicd/scripts/postgressql-init/* /init/
          chmod +x /init/post.sh
          rm -rvf ./didx-xyz-yoma-*
      volumeMounts:
        - name: init
          mountPath: /init

livenessProbe:
  enabled: true
  # failureThreshold: 3
  httpGet:
    path: /api/v3/health/live
    port: http
  # initialDelaySeconds: 0
  # periodSeconds: 10
  # successThreshold: 1
  # timeoutSeconds: 1
readinessProbe:
  enabled: true
  # failureThreshold: 3
  httpGet:
    path: /api/v3/health/ready
    port: http
  # initialDelaySeconds: 0
  # periodSeconds: 10
  # successThreshold: 1
  # timeoutSeconds: 1
startupProbe:
  enabled: true
  failureThreshold: 30
  httpGet:
    path: /api/v3/health/live
    port: http
  # initialDelaySeconds: 0
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 3

lifecycleHooks:
  preStop:
    exec:
      command:
        - /bin/sh
        - -c
        - sleep 5
    # sleep:
    #   seconds: 5

podDisruptionBudget:
  enabled: false
  maxUnavailable: 1
  minAvailable: 1
